{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst inputPlace = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\"[data-start]\");\nconst modal = document.querySelector(\".visible-open-block\"); // Corrected selector\n\nlet userSelectedDate;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate.getTime() < Date.now()) {\n            modal.style.display = 'flex';\n            setTimeout(() => {\n                modal.style.display = 'none'; \n            }, 1000);\n        } else {\n            const a = convertMs(selectedDate.getTime() - Date.now())\n            console.log(a)\n            \n        }\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nclass TimeToDate {\n    constructor({ onTick }) {\n        this.onTick = onTick;\n        this.intervalId = null;\n        this.isActive = false;\n\n        this.initTimer();\n    }\n\n    initTimer() {\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n\n    start() {\n        if (this.isActive) {\n            return;\n        }\n\n        this.initTimer();\n        this.isActive = true;\n        const startTime = Date.now();\n    }\n\n    pad(value) {\n        return String(value).padStart(2, \"0\");\n    }\n\n    getTimeComponents(ms) {\n        const seconds = Math.floor(ms / 1000) % 60;\n        const minutes = Math.floor(ms / 1000 / 60) % 60;\n        const hours = Math.floor(ms / 1000 / 60 / 60) % 24;\n        const days = Math.floor(ms / 1000 / 60 / 60 / 24);\n\n        return { days, hours, minutes, seconds };\n    }\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n"],"names":["modal","options","selectedDates","selectedDate","a","convertMs","flatpickr","ms","days","hours","minutes","seconds"],"mappings":"svBAGmB,SAAS,cAAc,kBAAkB,EAC3C,SAAS,cAAc,cAAc,EACtD,MAAMA,EAAQ,SAAS,cAAc,qBAAqB,EAIpDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,GACnC,GAAIC,EAAa,QAAO,EAAK,KAAK,IAAG,EACjCH,EAAM,MAAM,QAAU,OACtB,WAAW,IAAM,CACbA,EAAM,MAAM,QAAU,MACzB,EAAE,GAAI,MACJ,CACH,MAAMI,EAAIC,EAAUF,EAAa,QAAO,EAAK,KAAK,KAAK,EACvD,QAAQ,IAAIC,CAAC,CAEhB,CACJ,CACL,EAEAE,EAAU,mBAAoBL,CAAO,EAwCrC,SAASI,EAAUE,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}